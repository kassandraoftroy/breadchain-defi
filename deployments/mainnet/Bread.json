{
  "address": "0xEd9265A05Fd6355061e1051c80450638EC84bff3",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawInterest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cReserveToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalReserve",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "interestAvailable",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_reserveTokenAddress",
          "type": "address"
        },
        {
          "name": "_cReserveTokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "transactionHash": "0x2edca90cde6824eacf6ddb1d138a0cdc240108566c341e70a814134e0991c5cc",
  "receipt": {
    "to": null,
    "from": "0x1d60C34f508BbBd7f1cb50b375c4CdD25e718D1c",
    "contractAddress": "0xEd9265A05Fd6355061e1051c80450638EC84bff3",
    "transactionIndex": 175,
    "gasUsed": "1615519",
    "logsBloom": "0x
    "blockHash": "0x8b07e1ca47c9cdd8f53fafcf9325e289fc27c4bb03daaa49247370fa2e931a14",
    "transactionHash": "0x2edca90cde6824eacf6ddb1d138a0cdc240108566c341e70a814134e0991c5cc",
    "logs": [
      {
        "transactionIndex": 175,
        "blockNumber": 12782002,
        "transactionHash": "0x2edca90cde6824eacf6ddb1d138a0cdc240108566c341e70a814134e0991c5cc",
        "address": "0xEd9265A05Fd6355061e1051c80450638EC84bff3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001d60c34f508bbbd7f1cb50b375c4cdd25e718d1c"
        ],
        "data": "0x",
        "logIndex": 143,
        "blockHash": "0x8b07e1ca47c9cdd8f53fafcf9325e289fc27c4bb03daaa49247370fa2e931a14"
      }
    ],
    "blockNumber": 12782002,
    "cumulativeGasUsed": "11280467",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6B175474E89094C44Da98b954EedeAC495271d0F",
    "0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643"
  ],
  "solcInputHash": "b8694f2175b93f2b6f278f1eceefacdd",
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInterest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cReserveToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalReserve\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"interestAvailable\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_reserveTokenAddress\",\"type\":\"address\"},{\"name\":\"_cReserveTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"name()\":{\"return\":\"the name of the token.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/Bread.sol\":\"Bread\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Bread.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.4.25;\\n\\nimport \\\"./ownership/Ownable.sol\\\";\\nimport \\\"./math/SafeMath.sol\\\";\\nimport \\\"./token/ERC20.sol\\\";\\nimport \\\"./token/ERC20Detailed.sol\\\";\\nimport \\\"./interfaces/ICERC20.sol\\\";\\nimport \\\"./interfaces/IWETH.sol\\\";\\nimport \\\"./security/ReentrancyGuard.sol\\\";\\n\\ncontract Bread is Ownable, ERC20, ERC20Detailed, ReentrancyGuard {\\n    using SafeMath for uint256;\\n    address private constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    IERC20 public reserveToken;\\n    ICERC20 public cReserveToken;\\n    uint256 public totalReserve;\\n\\n    event Minted(address sender, uint256 amount);\\n    event Burned(address sender, uint256 amount);\\n\\n    constructor(\\n        address _reserveTokenAddress,\\n        address _cReserveTokenAddress\\n    ) public ERC20Detailed(\\\"Breadchain Stablecoin\\\", \\\"BREAD\\\", 18) {\\n        reserveToken = IERC20(_reserveTokenAddress);\\n        cReserveToken = ICERC20(_cReserveTokenAddress);\\n    }\\n\\n    function mint(uint256 _amount) public {\\n        _handleMint(_amount);\\n        require(reserveToken.transferFrom(msg.sender, address(this), _amount), \\\"mint() ERC20.transferFrom failed.\\\");\\n        require(reserveToken.approve(address(cReserveToken), _amount), \\\"mint() ERC20.approve failed.\\\");\\n        require(cReserveToken.mint(_amount) == 0, \\\"mint() cERC20.mint failed.\\\");\\n        totalReserve = totalReserve.add(_amount);\\n    }\\n\\n    function burn(uint256 _amount) public nonReentrant {\\n        _handleBurn(_amount);\\n        require(cReserveToken.redeemUnderlying(_amount) == 0, \\\"burn() cERC20.redeemUnderlying failed.\\\");\\n        totalReserve = totalReserve.sub(_amount);\\n        require(reserveToken.transfer(msg.sender, _amount), \\\"burn() ERC20.transfer failed.\\\");\\n    }\\n\\n    function withdrawInterest(uint256 _amount) public onlyOwner nonReentrant {\\n        require(_amount > 0, \\\"withdrawInterest() cannot withdraw 0\\\");\\n        uint256 interest = interestAvailable();\\n        require(interest >= _amount, \\\"withdrawInterest() interest accrued is below withdraw amount\\\");\\n        require(cReserveToken.redeemUnderlying(_amount) == 0, \\\"withdrawInterest() cERC20.redeemUnderlying failed.\\\");\\n        require(reserveToken.transfer(owner(), _amount), \\\"withdrawInterest() ERC20.transfer failed.\\\");\\n    }\\n\\n    function withdrawToken(address _tokenAddress, uint256 _amount) public onlyOwner nonReentrant {\\n        require(_tokenAddress != address(cReserveToken), \\\"withdrawToken() cannot withdraw collateral token.\\\");\\n        if (_tokenAddress == ETH) {\\n            require(address(this).balance >= _amount, \\\"withdrawToken() balance too low\\\");\\n            owner().transfer(_amount);\\n        } else {\\n            require(IERC20(_tokenAddress).transfer(owner(), _amount), \\\"withdrawToken() ERC20.transfer failed.\\\");\\n        }\\n    }\\n\\n    function interestAvailable() public view returns (uint256) {\\n        return cReserveToken.balanceOfUnderlying(address(this)).sub(totalReserve);\\n    }\\n\\n    function _handleMint(uint256 _amount) internal {\\n        require(_amount > 0, \\\"Deposit must be non-zero.\\\");\\n        _mint(msg.sender, _amount);\\n        emit Minted(msg.sender, _amount);\\n    }\\n\\n    function _handleBurn(uint256 _amount) internal {\\n        require(_amount > 0, \\\"Amount must be non-zero.\\\");\\n        require(balanceOf(msg.sender) >= _amount, \\\"Insufficient tokens to burn.\\\");\\n\\n        _burn(msg.sender, _amount);\\n        emit Burned(msg.sender, _amount);\\n    }\\n\\n    function () external payable {}\\n}\",\"keccak256\":\"0x5a38f52154eb9755eec1f7d6ef7ac080dea68b971b4b7694b13c833467105319\"},\"contracts/interfaces/ICERC20.sol\":{\"content\":\"pragma solidity 0.4.25;\\n\\n/**\\n * @title CErc20 interface for Compound ERC20 assets\\n */\\ninterface ICERC20 {\\n    function mint(uint256 mintAmount) external returns (uint256);\\n    function redeem(uint256 redeemTokens) external returns (uint256);\\n    function redeemUnderlying(uint256 redeemAmount) external returns (uint256);\\n    function borrow(uint256 borrowAmount) external returns (uint256);\\n    function repayBorrow(uint256 repayAmount) external returns (uint256);\\n    function balanceOfUnderlying(address account) external view returns (uint256);\\n    function exchangeRateCurrent() external view returns (uint256);\\n}\",\"keccak256\":\"0x50954c4806f39191d9ebb5a23788564e59b1a4869616da7de30ac04cbddb82a1\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"pragma solidity 0.4.25;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://github.com/ethereum/EIPs/issues/20\\n */\\ninterface IERC20 {\\n  function totalSupply() external view returns (uint256);\\n\\n  function balanceOf(address who) external view returns (uint256);\\n\\n  function allowance(address owner, address spender)\\n    external view returns (uint256);\\n\\n  function transfer(address to, uint256 value) external returns (bool);\\n\\n  function approve(address spender, uint256 value)\\n    external returns (bool);\\n\\n  function transferFrom(address from, address to, uint256 value)\\n    external returns (bool);\\n\\n  event Transfer(\\n    address indexed from,\\n    address indexed to,\\n    uint256 value\\n  );\\n\\n  event Approval(\\n    address indexed owner,\\n    address indexed spender,\\n    uint256 value\\n  );\\n}\",\"keccak256\":\"0xedb4e0edaec0b22ab362385545565e9ab5d010598481b05c5ef38ed218e8551a\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"pragma solidity 0.4.25;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n}\",\"keccak256\":\"0x86b862f42e73efcab5f501c516210e107172a3a6a093e65587c20b8ffe86e79b\"},\"contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.4.24;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert on error\\n */\\nlibrary SafeMath {\\n\\n  /**\\n  * @dev Multiplies two numbers, reverts on overflow.\\n  */\\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n    // benefit is lost if 'b' is also tested.\\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    uint256 c = a * b;\\n    require(c / a == b);\\n\\n    return c;\\n  }\\n\\n  /**\\n  * @dev Integer division of two numbers truncating the quotient, reverts on division by zero.\\n  */\\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b > 0); // Solidity only automatically asserts when dividing by 0\\n    uint256 c = a / b;\\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n    return c;\\n  }\\n\\n  /**\\n  * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\\n  */\\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b <= a);\\n    uint256 c = a - b;\\n\\n    return c;\\n  }\\n\\n  /**\\n  * @dev Adds two numbers, reverts on overflow.\\n  */\\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n    uint256 c = a + b;\\n    require(c >= a);\\n\\n    return c;\\n  }\\n\\n  /**\\n  * @dev Divides two numbers and returns the remainder (unsigned integer modulo),\\n  * reverts when dividing by zero.\\n  */\\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n    require(b != 0);\\n    return a % b;\\n  }\\n}\\n\",\"keccak256\":\"0xdd18f05c74536a06166c90a17ec3c6932853764f292bed314ceb23e730ff83af\"},\"contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.4.24;\\n\\n/**\\n * @title Ownable\\n * @dev The Ownable contract has an owner address, and provides basic authorization control\\n * functions, this simplifies the implementation of \\\"user permissions\\\".\\n */\\ncontract Ownable {\\n  address private _owner;\\n\\n  event OwnershipTransferred(\\n    address indexed previousOwner,\\n    address indexed newOwner\\n  );\\n\\n  /**\\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\\n   * account.\\n   */\\n  constructor() internal {\\n    _owner = msg.sender;\\n    emit OwnershipTransferred(address(0), _owner);\\n  }\\n\\n  /**\\n   * @return the address of the owner.\\n   */\\n  function owner() public view returns(address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @dev Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    require(isOwner());\\n    _;\\n  }\\n\\n  /**\\n   * @return true if `msg.sender` is the owner of the contract.\\n   */\\n  function isOwner() public view returns(bool) {\\n    return msg.sender == _owner;\\n  }\\n\\n  /**\\n   * @dev Allows the current owner to relinquish control of the contract.\\n   * @notice Renouncing to ownership will leave the contract without an owner.\\n   * It will not be possible to call the functions with the `onlyOwner`\\n   * modifier anymore.\\n   */\\n  function renounceOwnership() public onlyOwner {\\n    emit OwnershipTransferred(_owner, address(0));\\n    _owner = address(0);\\n  }\\n\\n  /**\\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\\n   * @param newOwner The address to transfer ownership to.\\n   */\\n  function transferOwnership(address newOwner) public onlyOwner {\\n    _transferOwnership(newOwner);\\n  }\\n\\n  /**\\n   * @dev Transfers control of the contract to a newOwner.\\n   * @param newOwner The address to transfer ownership to.\\n   */\\n  function _transferOwnership(address newOwner) internal {\\n    require(newOwner != address(0));\\n    emit OwnershipTransferred(_owner, newOwner);\\n    _owner = newOwner;\\n  }\\n}\\n\",\"keccak256\":\"0x973e50d102a48ea6e132f18793b096910ed508656e89706744112cbb4ecaa9dd\"},\"contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.4.25;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() public {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\",\"keccak256\":\"0x99fd4dbf04d4e3446e31a2a9c39e6486b1d445d129e43b61a162f40f31609192\"},\"contracts/token/ERC20.sol\":{\"content\":\"pragma solidity ^0.4.25;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../math/SafeMath.sol\\\";\\n\\n/**\\n * @title Standard ERC20 token\\n *\\n * @dev Implementation of the basic standard token.\\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\\n * Originally based on code by FirstBlood:\\n * https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\\n *\\n * This implementation emits additional Approval events, allowing applications to reconstruct the allowance status for\\n * all accounts just by listening to said events. Note that this isn't required by the specification, and other\\n * compliant implementations may not do it.\\n */\\ncontract ERC20 is IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowed;\\n\\n    uint256 private _totalSupply;\\n\\n    /**\\n     * @dev Total number of tokens in existence\\n     */\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Gets the balance of the specified address.\\n     * @param owner The address to query the balance of.\\n     * @return An uint256 representing the amount owned by the passed address.\\n     */\\n    function balanceOf(address owner) public view returns (uint256) {\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\\n     * @param owner address The address which owns the funds.\\n     * @param spender address The address which will spend the funds.\\n     * @return A uint256 specifying the amount of tokens still available for the spender.\\n     */\\n    function allowance(address owner, address spender) public view returns (uint256) {\\n        return _allowed[owner][spender];\\n    }\\n\\n    /**\\n     * @dev Transfer token for a specified address\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function transfer(address to, uint256 value) public returns (bool) {\\n        _transfer(msg.sender, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     */\\n    function approve(address spender, uint256 value) public returns (bool) {\\n        _approve(msg.sender, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer tokens from one address to another.\\n     * Note that while this function emits an Approval event, this is not required as per the specification,\\n     * and other compliant implementations may not emit the event.\\n     * @param from address The address which you want to send tokens from\\n     * @param to address The address which you want to transfer to\\n     * @param value uint256 the amount of tokens to be transferred\\n     */\\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {\\n        _transfer(from, to, value);\\n        _approve(from, msg.sender, _allowed[from][msg.sender].sub(value));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Increase the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when allowed_[_spender] == 0. To increment\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param addedValue The amount of tokens to increase the allowance by.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Decrease the amount of tokens that an owner allowed to a spender.\\n     * approve should be called when allowed_[_spender] == 0. To decrement\\n     * allowed value is better to use this function to avoid 2 calls (and wait until\\n     * the first transaction is mined)\\n     * From MonolithDAO Token.sol\\n     * Emits an Approval event.\\n     * @param spender The address which will spend the funds.\\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\\n        _approve(msg.sender, spender, _allowed[msg.sender][spender].sub(subtractedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Transfer token for a specified addresses\\n     * @param from The address to transfer from.\\n     * @param to The address to transfer to.\\n     * @param value The amount to be transferred.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        require(to != address(0));\\n\\n        _balances[from] = _balances[from].sub(value);\\n        _balances[to] = _balances[to].add(value);\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that mints an amount of the token and assigns it to\\n     * an account. This encapsulates the modification of balances such that the\\n     * proper events are emitted.\\n     * @param account The account that will receive the created tokens.\\n     * @param value The amount that will be created.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.add(value);\\n        _balances[account] = _balances[account].add(value);\\n        emit Transfer(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account.\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        require(account != address(0));\\n\\n        _totalSupply = _totalSupply.sub(value);\\n        _balances[account] = _balances[account].sub(value);\\n        emit Transfer(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Approve an address to spend another addresses' tokens.\\n     * @param owner The address that owns the tokens.\\n     * @param spender The address that will spend the tokens.\\n     * @param value The number of tokens that can be spent.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        require(spender != address(0));\\n        require(owner != address(0));\\n\\n        _allowed[owner][spender] = value;\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /**\\n     * @dev Internal function that burns an amount of the token of a given\\n     * account, deducting from the sender's allowance for said account. Uses the\\n     * internal burn function.\\n     * Emits an Approval event (reflecting the reduced allowance).\\n     * @param account The account whose tokens will be burnt.\\n     * @param value The amount that will be burnt.\\n     */\\n    function _burnFrom(address account, uint256 value) internal {\\n        _burn(account, value);\\n        _approve(account, msg.sender, _allowed[account][msg.sender].sub(value));\\n    }\\n}\",\"keccak256\":\"0x3aa02488415e87460a4ca988cf927f3c84ccd0d3fddf1c91cbe40f23281ec71c\"},\"contracts/token/ERC20Detailed.sol\":{\"content\":\"pragma solidity 0.4.25;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\n\\n/**\\n * @title ERC20Detailed token\\n * @dev The decimals are only for visualization purposes.\\n * All the operations are done using the smallest and indivisible token unit,\\n * just as on Ethereum all the operations are done in wei.\\n */\\ncontract ERC20Detailed is IERC20 {\\n  string private _name;\\n  string private _symbol;\\n  uint8 private _decimals;\\n\\n  constructor(string name, string symbol, uint8 decimals) public {\\n    _name = name;\\n    _symbol = symbol;\\n    _decimals = decimals;\\n  }\\n\\n  /**\\n   * @return the name of the token.\\n   */\\n  function name() public view returns(string) {\\n    return _name;\\n  }\\n\\n  /**\\n   * @return the symbol of the token.\\n   */\\n  function symbol() public view returns(string) {\\n    return _symbol;\\n  }\\n\\n  /**\\n   * @return the number of decimals of the token.\\n   */\\n  function decimals() public view returns(uint8) {\\n    return _decimals;\\n  }\\n}\\n\",\"keccak256\":\"0x7616ad0f526408ee01fd8ac440388ddcd8a9a057046550340090510a63631dbb\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160408062001b6583398101604081815282516020938401518284018352601584527f4272656164636861696e20537461626c65636f696e00000000000000000000008585015282518084018452600581527f42524541440000000000000000000000000000000000000000000000000000009581019590955260008054600160a060020a0319163317808255935192959194939192601292600160a060020a031691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38251620000f290600490602086019062000157565b5081516200010890600590602085019062000157565b506006805460ff90921660ff199092169190911790555050600160075560088054600160a060020a03938416600160a060020a03199182161790915560098054929093169116179055620001fc565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200019a57805160ff1916838001178555620001ca565b82800160010185558215620001ca579182015b82811115620001ca578251825591602001919060010190620001ad565b50620001d8929150620001dc565b5090565b620001f991905b80821115620001d85760008155600101620001e3565b90565b611959806200020c6000396000f3006080604052600436106101195763ffffffff60e060020a60003504166306fdde03811461011b57806308669aab146101a5578063095ea7b3146101bd5780630da4fea9146101f557806318160ddd1461022657806323b872dd1461024d578063313ce5671461027757806339509351146102a257806342966c68146102c65780634c68df67146102de57806370a08231146102f3578063715018a6146103145780638da5cb5b146103295780638f32d59b1461033e57806395d89b41146103535780639e281a9814610368578063a0712d681461038c578063a457c2d7146103a4578063a9059cbb146103c8578063d9891bf9146103ec578063dd62ed3e14610401578063f2fde38b14610428578063f4325d6714610449575b005b34801561012757600080fd5b5061013061045e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016a578181015183820152602001610152565b50505050905090810190601f1680156101975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b157600080fd5b506101196004356104f4565b3480156101c957600080fd5b506101e1600160a060020a0360043516602435610899565b604080519115158252519081900360200190f35b34801561020157600080fd5b5061020a6108af565b60408051600160a060020a039092168252519081900360200190f35b34801561023257600080fd5b5061023b6108be565b60408051918252519081900360200190f35b34801561025957600080fd5b506101e1600160a060020a03600435811690602435166044356108c4565b34801561028357600080fd5b5061028c61091b565b6040805160ff9092168252519081900360200190f35b3480156102ae57600080fd5b506101e1600160a060020a0360043516602435610924565b3480156102d257600080fd5b50610119600435610960565b3480156102ea57600080fd5b5061023b610be4565b3480156102ff57600080fd5b5061023b600160a060020a0360043516610bea565b34801561032057600080fd5b50610119610c05565b34801561033557600080fd5b5061020a610c6f565b34801561034a57600080fd5b506101e1610c7e565b34801561035f57600080fd5b50610130610c8f565b34801561037457600080fd5b50610119600160a060020a0360043516602435610cf0565b34801561039857600080fd5b50610119600435610fc5565b3480156103b057600080fd5b506101e1600160a060020a03600435166024356112de565b3480156103d457600080fd5b506101e1600160a060020a036004351660243561131a565b3480156103f857600080fd5b5061023b611327565b34801561040d57600080fd5b5061023b600160a060020a03600435811690602435166113d5565b34801561043457600080fd5b50610119600160a060020a0360043516611400565b34801561045557600080fd5b5061020a61141f565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ea5780601f106104bf576101008083540402835291602001916104ea565b820191906000526020600020905b8154815290600101906020018083116104cd57829003601f168201915b5050505050905090565b60006104fe610c7e565b151561050957600080fd5b60075460021415610564576040805160e560020a62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600755600082116105e6576040805160e560020a62461bcd028152602060048201526024808201527f7769746864726177496e74657265737428292063616e6e6f742077697468647260448201527f6177203000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6105ee611327565b90508181101561066e576040805160e560020a62461bcd02815260206004820152603c60248201527f7769746864726177496e746572657374282920696e746572657374206163637260448201527f7565642069732062656c6f7720776974686472617720616d6f756e7400000000606482015290519081900360840190fd5b600954604080517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a039092169163852a12e3916024808201926020929091908290030181600087803b1580156106d557600080fd5b505af11580156106e9573d6000803e3d6000fd5b505050506040513d60208110156106ff57600080fd5b50511561077c576040805160e560020a62461bcd02815260206004820152603260248201527f7769746864726177496e7465726573742829206345524332302e72656465656d60448201527f556e6465726c79696e67206661696c65642e0000000000000000000000000000606482015290519081900360840190fd5b600854600160a060020a031663a9059cbb610795610c6f565b846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b505050506040513d602081101561081257600080fd5b50511515610890576040805160e560020a62461bcd02815260206004820152602960248201527f7769746864726177496e74657265737428292045524332302e7472616e73666560448201527f72206661696c65642e0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50506001600755565b60006108a633848461142e565b50600192915050565b600954600160a060020a031681565b60035490565b60006108d18484846114ba565b600160a060020a03841660009081526002602090815260408083203380855292529091205461091191869161090c908663ffffffff61158916565b61142e565b5060019392505050565b60065460ff1690565b336000818152600260209081526040808320600160a060020a038716845290915281205490916108a691859061090c908663ffffffff6115a016565b600754600214156109bb576040805160e560020a62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026007556109c9816115b9565b600954604080517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018490529051600160a060020a039092169163852a12e3916024808201926020929091908290030181600087803b158015610a3057600080fd5b505af1158015610a44573d6000803e3d6000fd5b505050506040513d6020811015610a5a57600080fd5b505115610ad7576040805160e560020a62461bcd02815260206004820152602660248201527f6275726e2829206345524332302e72656465656d556e6465726c79696e67206660448201527f61696c65642e0000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600a54610aea908263ffffffff61158916565b600a55600854604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018490529051600160a060020a039092169163a9059cbb916044808201926020929091908290030181600087803b158015610b5a57600080fd5b505af1158015610b6e573d6000803e3d6000fd5b505050506040513d6020811015610b8457600080fd5b50511515610bdc576040805160e560020a62461bcd02815260206004820152601d60248201527f6275726e28292045524332302e7472616e73666572206661696c65642e000000604482015290519081900360640190fd5b506001600755565b600a5481565b600160a060020a031660009081526001602052604090205490565b610c0d610c7e565b1515610c1857600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ea5780601f106104bf576101008083540402835291602001916104ea565b610cf8610c7e565b1515610d0357600080fd5b60075460021415610d5e576040805160e560020a62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600755600954600160a060020a0383811691161415610def576040805160e560020a62461bcd02815260206004820152603160248201527f7769746864726177546f6b656e28292063616e6e6f742077697468647261772060448201527f636f6c6c61746572616c20746f6b656e2e000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610eb3573031811115610e6d576040805160e560020a62461bcd02815260206004820152601f60248201527f7769746864726177546f6b656e28292062616c616e636520746f6f206c6f7700604482015290519081900360640190fd5b610e75610c6f565b600160a060020a03166108fc829081150290604051600060405180830381858888f19350505050158015610ead573d6000803e3d6000fd5b50610890565b81600160a060020a031663a9059cbb610eca610c6f565b836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610f1d57600080fd5b505af1158015610f31573d6000803e3d6000fd5b505050506040513d6020811015610f4757600080fd5b50511515610890576040805160e560020a62461bcd02815260206004820152602660248201527f7769746864726177546f6b656e28292045524332302e7472616e73666572206660448201527f61696c65642e0000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610fce816116b9565b600854604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529051600160a060020a03909216916323b872dd916064808201926020929091908290030181600087803b15801561104157600080fd5b505af1158015611055573d6000803e3d6000fd5b505050506040513d602081101561106b57600080fd5b505115156110e9576040805160e560020a62461bcd02815260206004820152602160248201527f6d696e7428292045524332302e7472616e7366657246726f6d206661696c656460448201527f2e00000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600854600954604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a039283166004820152602481018590529051919092169163095ea7b39160448083019260209291908290030181600087803b15801561115b57600080fd5b505af115801561116f573d6000803e3d6000fd5b505050506040513d602081101561118557600080fd5b505115156111dd576040805160e560020a62461bcd02815260206004820152601c60248201527f6d696e7428292045524332302e617070726f7665206661696c65642e00000000604482015290519081900360640190fd5b600954604080517fa0712d68000000000000000000000000000000000000000000000000000000008152600481018490529051600160a060020a039092169163a0712d68916024808201926020929091908290030181600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b505050506040513d602081101561126e57600080fd5b5051156112c5576040805160e560020a62461bcd02815260206004820152601a60248201527f6d696e742829206345524332302e6d696e74206661696c65642e000000000000604482015290519081900360640190fd5b600a546112d8908263ffffffff6115a016565b600a5550565b336000818152600260209081526040808320600160a060020a038716845290915281205490916108a691859061090c908663ffffffff61158916565b60006108a63384846114ba565b600a54600954604080517f3af9e66900000000000000000000000000000000000000000000000000000000815230600482015290516000936113d0939092600160a060020a0390911691633af9e6699160248082019260209290919082900301818987803b15801561139857600080fd5b505af11580156113ac573d6000803e3d6000fd5b505050506040513d60208110156113c257600080fd5b50519063ffffffff61158916565b905090565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b611408610c7e565b151561141357600080fd5b61141c81611759565b50565b600854600160a060020a031681565b600160a060020a038216151561144357600080fd5b600160a060020a038316151561145857600080fd5b600160a060020a03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03821615156114cf57600080fd5b600160a060020a0383166000908152600160205260409020546114f8908263ffffffff61158916565b600160a060020a03808516600090815260016020526040808220939093559084168152205461152d908263ffffffff6115a016565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000808383111561159957600080fd5b5050900390565b6000828201838110156115b257600080fd5b9392505050565b60008111611611576040805160e560020a62461bcd02815260206004820152601860248201527f416d6f756e74206d757374206265206e6f6e2d7a65726f2e0000000000000000604482015290519081900360640190fd5b8061161b33610bea565b1015611671576040805160e560020a62461bcd02815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e7320746f206275726e2e00000000604482015290519081900360640190fd5b61167b33826117d6565b604080513381526020810183905281517f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7929181900390910190a150565b60008111611711576040805160e560020a62461bcd02815260206004820152601960248201527f4465706f736974206d757374206265206e6f6e2d7a65726f2e00000000000000604482015290519081900360640190fd5b61171b3382611881565b604080513381526020810183905281517f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe929181900390910190a150565b600160a060020a038116151561176e57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03821615156117eb57600080fd5b6003546117fe908263ffffffff61158916565b600355600160a060020a03821660009081526001602052604090205461182a908263ffffffff61158916565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a038216151561189657600080fd5b6003546118a9908263ffffffff6115a016565b600355600160a060020a0382166000908152600160205260409020546118d5908263ffffffff6115a016565b600160a060020a03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a723058204c1351e06fd483acde5218a3e3bfcdbdcb461a2f31f09fe5cb3645735e2385c00029",
  "deployedBytecode": "0x6080604052600436106101195763ffffffff60e060020a60003504166306fdde03811461011b57806308669aab146101a5578063095ea7b3146101bd5780630da4fea9146101f557806318160ddd1461022657806323b872dd1461024d578063313ce5671461027757806339509351146102a257806342966c68146102c65780634c68df67146102de57806370a08231146102f3578063715018a6146103145780638da5cb5b146103295780638f32d59b1461033e57806395d89b41146103535780639e281a9814610368578063a0712d681461038c578063a457c2d7146103a4578063a9059cbb146103c8578063d9891bf9146103ec578063dd62ed3e14610401578063f2fde38b14610428578063f4325d6714610449575b005b34801561012757600080fd5b5061013061045e565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016a578181015183820152602001610152565b50505050905090810190601f1680156101975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b157600080fd5b506101196004356104f4565b3480156101c957600080fd5b506101e1600160a060020a0360043516602435610899565b604080519115158252519081900360200190f35b34801561020157600080fd5b5061020a6108af565b60408051600160a060020a039092168252519081900360200190f35b34801561023257600080fd5b5061023b6108be565b60408051918252519081900360200190f35b34801561025957600080fd5b506101e1600160a060020a03600435811690602435166044356108c4565b34801561028357600080fd5b5061028c61091b565b6040805160ff9092168252519081900360200190f35b3480156102ae57600080fd5b506101e1600160a060020a0360043516602435610924565b3480156102d257600080fd5b50610119600435610960565b3480156102ea57600080fd5b5061023b610be4565b3480156102ff57600080fd5b5061023b600160a060020a0360043516610bea565b34801561032057600080fd5b50610119610c05565b34801561033557600080fd5b5061020a610c6f565b34801561034a57600080fd5b506101e1610c7e565b34801561035f57600080fd5b50610130610c8f565b34801561037457600080fd5b50610119600160a060020a0360043516602435610cf0565b34801561039857600080fd5b50610119600435610fc5565b3480156103b057600080fd5b506101e1600160a060020a03600435166024356112de565b3480156103d457600080fd5b506101e1600160a060020a036004351660243561131a565b3480156103f857600080fd5b5061023b611327565b34801561040d57600080fd5b5061023b600160a060020a03600435811690602435166113d5565b34801561043457600080fd5b50610119600160a060020a0360043516611400565b34801561045557600080fd5b5061020a61141f565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ea5780601f106104bf576101008083540402835291602001916104ea565b820191906000526020600020905b8154815290600101906020018083116104cd57829003601f168201915b5050505050905090565b60006104fe610c7e565b151561050957600080fd5b60075460021415610564576040805160e560020a62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600755600082116105e6576040805160e560020a62461bcd028152602060048201526024808201527f7769746864726177496e74657265737428292063616e6e6f742077697468647260448201527f6177203000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b6105ee611327565b90508181101561066e576040805160e560020a62461bcd02815260206004820152603c60248201527f7769746864726177496e746572657374282920696e746572657374206163637260448201527f7565642069732062656c6f7720776974686472617720616d6f756e7400000000606482015290519081900360840190fd5b600954604080517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018590529051600160a060020a039092169163852a12e3916024808201926020929091908290030181600087803b1580156106d557600080fd5b505af11580156106e9573d6000803e3d6000fd5b505050506040513d60208110156106ff57600080fd5b50511561077c576040805160e560020a62461bcd02815260206004820152603260248201527f7769746864726177496e7465726573742829206345524332302e72656465656d60448201527f556e6465726c79696e67206661696c65642e0000000000000000000000000000606482015290519081900360840190fd5b600854600160a060020a031663a9059cbb610795610c6f565b846040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b1580156107e857600080fd5b505af11580156107fc573d6000803e3d6000fd5b505050506040513d602081101561081257600080fd5b50511515610890576040805160e560020a62461bcd02815260206004820152602960248201527f7769746864726177496e74657265737428292045524332302e7472616e73666560448201527f72206661696c65642e0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50506001600755565b60006108a633848461142e565b50600192915050565b600954600160a060020a031681565b60035490565b60006108d18484846114ba565b600160a060020a03841660009081526002602090815260408083203380855292529091205461091191869161090c908663ffffffff61158916565b61142e565b5060019392505050565b60065460ff1690565b336000818152600260209081526040808320600160a060020a038716845290915281205490916108a691859061090c908663ffffffff6115a016565b600754600214156109bb576040805160e560020a62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026007556109c9816115b9565b600954604080517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018490529051600160a060020a039092169163852a12e3916024808201926020929091908290030181600087803b158015610a3057600080fd5b505af1158015610a44573d6000803e3d6000fd5b505050506040513d6020811015610a5a57600080fd5b505115610ad7576040805160e560020a62461bcd02815260206004820152602660248201527f6275726e2829206345524332302e72656465656d556e6465726c79696e67206660448201527f61696c65642e0000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600a54610aea908263ffffffff61158916565b600a55600854604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018490529051600160a060020a039092169163a9059cbb916044808201926020929091908290030181600087803b158015610b5a57600080fd5b505af1158015610b6e573d6000803e3d6000fd5b505050506040513d6020811015610b8457600080fd5b50511515610bdc576040805160e560020a62461bcd02815260206004820152601d60248201527f6275726e28292045524332302e7472616e73666572206661696c65642e000000604482015290519081900360640190fd5b506001600755565b600a5481565b600160a060020a031660009081526001602052604090205490565b610c0d610c7e565b1515610c1857600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104ea5780601f106104bf576101008083540402835291602001916104ea565b610cf8610c7e565b1515610d0357600080fd5b60075460021415610d5e576040805160e560020a62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600755600954600160a060020a0383811691161415610def576040805160e560020a62461bcd02815260206004820152603160248201527f7769746864726177546f6b656e28292063616e6e6f742077697468647261772060448201527f636f6c6c61746572616c20746f6b656e2e000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610eb3573031811115610e6d576040805160e560020a62461bcd02815260206004820152601f60248201527f7769746864726177546f6b656e28292062616c616e636520746f6f206c6f7700604482015290519081900360640190fd5b610e75610c6f565b600160a060020a03166108fc829081150290604051600060405180830381858888f19350505050158015610ead573d6000803e3d6000fd5b50610890565b81600160a060020a031663a9059cbb610eca610c6f565b836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015610f1d57600080fd5b505af1158015610f31573d6000803e3d6000fd5b505050506040513d6020811015610f4757600080fd5b50511515610890576040805160e560020a62461bcd02815260206004820152602660248201527f7769746864726177546f6b656e28292045524332302e7472616e73666572206660448201527f61696c65642e0000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b610fce816116b9565b600854604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490529051600160a060020a03909216916323b872dd916064808201926020929091908290030181600087803b15801561104157600080fd5b505af1158015611055573d6000803e3d6000fd5b505050506040513d602081101561106b57600080fd5b505115156110e9576040805160e560020a62461bcd02815260206004820152602160248201527f6d696e7428292045524332302e7472616e7366657246726f6d206661696c656460448201527f2e00000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600854600954604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a039283166004820152602481018590529051919092169163095ea7b39160448083019260209291908290030181600087803b15801561115b57600080fd5b505af115801561116f573d6000803e3d6000fd5b505050506040513d602081101561118557600080fd5b505115156111dd576040805160e560020a62461bcd02815260206004820152601c60248201527f6d696e7428292045524332302e617070726f7665206661696c65642e00000000604482015290519081900360640190fd5b600954604080517fa0712d68000000000000000000000000000000000000000000000000000000008152600481018490529051600160a060020a039092169163a0712d68916024808201926020929091908290030181600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b505050506040513d602081101561126e57600080fd5b5051156112c5576040805160e560020a62461bcd02815260206004820152601a60248201527f6d696e742829206345524332302e6d696e74206661696c65642e000000000000604482015290519081900360640190fd5b600a546112d8908263ffffffff6115a016565b600a5550565b336000818152600260209081526040808320600160a060020a038716845290915281205490916108a691859061090c908663ffffffff61158916565b60006108a63384846114ba565b600a54600954604080517f3af9e66900000000000000000000000000000000000000000000000000000000815230600482015290516000936113d0939092600160a060020a0390911691633af9e6699160248082019260209290919082900301818987803b15801561139857600080fd5b505af11580156113ac573d6000803e3d6000fd5b505050506040513d60208110156113c257600080fd5b50519063ffffffff61158916565b905090565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b611408610c7e565b151561141357600080fd5b61141c81611759565b50565b600854600160a060020a031681565b600160a060020a038216151561144357600080fd5b600160a060020a038316151561145857600080fd5b600160a060020a03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03821615156114cf57600080fd5b600160a060020a0383166000908152600160205260409020546114f8908263ffffffff61158916565b600160a060020a03808516600090815260016020526040808220939093559084168152205461152d908263ffffffff6115a016565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000808383111561159957600080fd5b5050900390565b6000828201838110156115b257600080fd5b9392505050565b60008111611611576040805160e560020a62461bcd02815260206004820152601860248201527f416d6f756e74206d757374206265206e6f6e2d7a65726f2e0000000000000000604482015290519081900360640190fd5b8061161b33610bea565b1015611671576040805160e560020a62461bcd02815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e7320746f206275726e2e00000000604482015290519081900360640190fd5b61167b33826117d6565b604080513381526020810183905281517f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7929181900390910190a150565b60008111611711576040805160e560020a62461bcd02815260206004820152601960248201527f4465706f736974206d757374206265206e6f6e2d7a65726f2e00000000000000604482015290519081900360640190fd5b61171b3382611881565b604080513381526020810183905281517f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe929181900390910190a150565b600160a060020a038116151561176e57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03821615156117eb57600080fd5b6003546117fe908263ffffffff61158916565b600355600160a060020a03821660009081526001602052604090205461182a908263ffffffff61158916565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a038216151561189657600080fd5b6003546118a9908263ffffffff6115a016565b600355600160a060020a0382166000908152600160205260409020546118d5908263ffffffff6115a016565b600160a060020a03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350505600a165627a7a723058204c1351e06fd483acde5218a3e3bfcdbdcb461a2f31f09fe5cb3645735e2385c00029",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}